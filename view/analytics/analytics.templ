package analytics

import (
    "fmt"
    "heroPacket/internal/analysis"
)

type ViewData struct {
    Filename      string
    TrafficStats  *analysis.TrafficStats
    TopProtocols  []analysis.ProtocolCount
    Conversations []*analysis.Conversation
}

templ Show(data ViewData) {
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HeroPacket - Analytics</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://unpkg.com/htmx.org@1.9.10"></script>
</head>
<body class="bg-gradient-to-r from-gray-800 to-gray-900 min-h-screen text-white">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-teal-400 mb-8">Traffic Analytics: { data.Filename }</h1>
        
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Protocol Distribution Chart -->
            <div class="bg-gray-700 rounded-xl p-6 border border-gray-600">
                <h2 class="text-xl font-semibold text-teal-400 mb-4">Protocol Distribution</h2>
                <div class="overflow-x-auto">
                    <table class="w-full text-left">
                        <thead>
                            <tr class="bg-gray-800/50">
                                <th class="px-6 py-3">Protocol</th>
                                <th class="px-6 py-3">Count</th>
                                <th class="px-6 py-3">Percentage</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-600">
                            for _, proto := range data.TopProtocols {
                                <tr class="hover:bg-gray-600/50">
                                    <td class="px-6 py-4">{ proto.Name }</td>
                                    <td class="px-6 py-4">{ fmt.Sprint(proto.Count) }</td>
                                    <td class="px-6 py-4">
                                        { fmt.Sprintf("%.1f%%", (float64(proto.Count) / float64(data.TrafficStats.TotalPackets)) * 100) }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Traffic Timeline -->
            <div class="bg-gray-700 rounded-xl p-6 border border-gray-600">
                <h2 class="text-xl font-semibold text-teal-400 mb-4">Packet Size Distribution</h2>
                <div class="space-y-4">
                    for bucket, count := range data.TrafficStats.SizeBuckets {
                        <div class="flex items-center">
                            <span class="w-24 text-gray-300">{ bucket }:</span>
                            <div class="flex-1 mx-4 bg-gray-600 rounded-full h-4">
                                <div 
                                    class="bg-teal-500 h-4 rounded-full" 
                                    style={ fmt.Sprintf("width: %d%%", (count * 100 / data.TrafficStats.TotalPackets)) }
                                ></div>
                            </div>
                            <span class="w-20 text-right">{ fmt.Sprint(count) }</span>
                        </div>
                    }
                </div>
            </div>

            <!-- Top Conversations -->
            <div class="bg-gray-700 rounded-xl p-6 border border-gray-600 col-span-2">
                <h2 class="text-xl font-semibold text-teal-400 mb-4">Top Conversations</h2>
                <div class="overflow-x-auto">
                    <table class="w-full text-left">
                        <thead>
                            <tr class="bg-gray-800/50">
                                <th class="px-6 py-3">Source IP</th>
                                <th class="px-6 py-3">Destination IP</th>
                                <th class="px-6 py-3">Protocol</th>
                                <th class="px-6 py-3">Packets</th>
                                <th class="px-6 py-3">Total Bytes</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-600">
                            for _, conv := range data.Conversations {
                                <tr class="hover:bg-gray-600/50">
                                    <td class="px-6 py-4">{ conv.SourceIP }</td>
                                    <td class="px-6 py-4">{ conv.DestIP }</td>
                                    <td class="px-6 py-4">{ conv.Protocol }</td>
                                    <td class="px-6 py-4">{ fmt.Sprint(conv.PacketCount) }</td>
                                    <td class="px-6 py-4">{ fmt.Sprintf("%.2f KB", float64(conv.TotalBytes)/1024) }</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</body>
} 