package home

import (
	"fmt"
	"time"
)

// Add this type at the top of the file
type UploadedFile struct {
	Name       string
	Size       int64
	UploadTime time.Time
}

// Landing page template (no CSRF needed)
templ Show() {
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HeroPacket</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-r from-gray-800 to-gray-900 min-h-screen flex flex-col items-center justify-center text-gray-200">
  <div class="bg-gray-700 shadow-2xl rounded-2xl p-10 w-full max-w-2xl border border-gray-600 text-center">
    <h1 class="text-5xl font-extrabold text-teal-400 mb-6">HeroPacket</h1>
    <p class="text-lg text-gray-300 mb-8">Easily upload and analyze your PCAP files for network insights.</p>
    <a 
      href="/home"
      class="bg-teal-500 text-white px-8 py-3 rounded-lg hover:bg-teal-600 focus:outline-none focus:ring-2 focus:ring-teal-400"
    >
      Get Started
    </a>
  </div>
</body>
}

// Dashboard template (with CSRF and file upload)
templ ShowHome(csrfToken string, files []UploadedFile) {
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HeroPacket - Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-r from-gray-800 to-gray-900 min-h-screen text-white">
  <!-- Top Navigation Bar -->
  <nav class="bg-gray-700 border-b border-gray-600 px-4 py-3">
    <div class="container mx-auto flex justify-between items-center">
      <div class="flex items-center">
        <h1 class="text-2xl font-bold text-teal-400">HeroPacket</h1>
      </div>
      <div class="flex items-center space-x-4">
        <button 
          onclick="document.getElementById('fileInput').click()"
          class="bg-teal-500 text-white px-4 py-2 rounded-lg hover:bg-teal-600 focus:outline-none focus:ring-2 focus:ring-teal-400 flex items-center"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12"/>
          </svg>
          Upload PCAP
        </button>
        <form id="uploadForm" hx-post="/upload" hx-encoding="multipart/form-data" class="hidden">
          <input 
            type="file" 
            id="fileInput" 
            name="pcap-file" 
            accept=".pcap,.pcapng"
            onchange="document.getElementById('uploadForm').submit()"
          />
          <input type="hidden" name="_csrf" value={csrfToken}/>
        </form>
      </div>
    </div>
  </nav>

  <div class="flex h-[calc(100vh-4rem)]">
    <!-- Sidebar -->
    <div class="w-64 bg-gray-700 border-r border-gray-600">
      <div class="p-4">
        <nav class="space-y-2">
          <a href="/overview" class="flex items-center px-4 py-3 text-white hover:bg-gray-600 hover:text-white rounded-lg transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
            </svg>
            Overview
          </a>
          <a href="/analytics" class="flex items-center px-4 py-3 text-white hover:bg-gray-600 hover:text-white rounded-lg transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
            Analytics
          </a>
          <a href="/mitre" class="flex items-center px-4 py-3 text-white hover:bg-gray-600 hover:text-white rounded-lg transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
            </svg>
            MITRE ATT&CK Scan
          </a>
          <a href="/docs" class="flex items-center px-4 py-3 text-white hover:bg-gray-600 hover:text-white rounded-lg transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
            </svg>
            Documentation
          </a>
        </nav>
      </div>
    </div>

    <!-- Main Content Area -->
    <div class="flex-1 p-8">
      <div class="bg-gray-700 rounded-2xl p-6 border border-gray-600">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-2xl font-bold text-white">Previous Uploads</h2>
        </div>
        
        <div class="overflow-x-auto">
          <table class="w-full text-left text-white">
            <thead class="bg-gray-800/50">
              <tr>
                <th class="px-6 py-3 rounded-l-lg">Filename</th>
                <th class="px-6 py-3">Upload Date</th>
                <th class="px-6 py-3">Size</th>
                <th class="px-6 py-3 rounded-r-lg">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-600">
              for _, file := range files {
                <tr class="hover:bg-gray-600/50 transition-colors">
                  <td class="px-6 py-4">{ file.Name }</td>
                  <td class="px-6 py-4">{ file.UploadTime.Format("2006-01-02 15:04:05") }</td>
                  <td class="px-6 py-4">{ formatFileSize(file.Size) }</td>
                  <td class="px-6 py-4">
                    <button 
                      hx-post={ fmt.Sprintf("/analyze/%s", file.Name) }
                      class="text-teal-400 hover:text-teal-300 transition-colors"
                    >
                      Analyze
                    </button>
                  </td>
                </tr>
              }
              if len(files) == 0 {
                <tr>
                  <td colspan="4" class="px-6 py-4 text-center text-white">
                    No PCAP files uploaded yet
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</body>
}

// Add this helper function
func formatFileSize(size int64) string {
	const unit = 1024
	if size < unit {
		return fmt.Sprintf("%d B", size)
	}
	div, exp := int64(unit), 0
	for n := size / unit; n >= unit; n /= unit {
		div *= unit
		exp++
	}
	return fmt.Sprintf("%.1f %cB", float64(size)/float64(div), "KMGTPE"[exp])
}
