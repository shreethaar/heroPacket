package upload

import (
	"strconv"
	
	"heroPacket/internal/analysis"
)

type ViewData struct {
	SessionID     string
	PacketCount   int
	TopProtocols  []analysis.ProtocolCount
	TrafficStats  *analysis.TrafficStats
	Conversations []*analysis.Conversation
	Error         string
}

templ Show(data ViewData) {
	<div class="container mx-auto p-4">
		if data.Error != "" {
			<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
				{ data.Error }
			</div>
		}

		<form hx-post="/upload" hx-encoding="multipart/form-data" class="mb-8">
			<div class="flex flex-col space-y-4">
				<input 
					type="file" 
					name="pcap-file" 
					accept=".pcap,.pcapng" 
					class="file-input file-input-bordered w-full max-w-xs"
				/>
				<button 
					type="submit" 
					class="btn btn-primary"
				>
					Analyze PCAP
				</button>
			</div>
		</form>

		if data.SessionID != "" {
			<div class="analysis-results space-y-6">
				<!-- Summary Section -->
				<div class="stats shadow">
					<div class="stat">
						<div class="stat-title">Total Packets</div>
						<div class="stat-value">{ strconv.Itoa(data.PacketCount) }</div>
					</div>
					
					<div class="stat">
						<div class="stat-title">Total Bytes</div>
						<div class="stat-value">{ data.TrafficStats.TotalBytes }</div>
					</div>
				</div>

				<!-- Protocol Distribution -->
				<div class="card bg-base-100 shadow">
					<div class="card-body">
						<h2 class="card-title">Protocol Distribution</h2>
						<div 
							hx-get={ "/analysis/protocol-chart/" + data.SessionID } 
							hx-trigger="load" 
							class="w-full h-64"
						>
							<div class="loading loading-spinner"></div>
						</div>
						
						<div class="overflow-x-auto">
							<table class="table">
								<thead>
									<tr>
										<th>Protocol</th>
										<th>Count</th>
									</tr>
								</thead>
								<tbody>
									for _, proto := range data.TopProtocols {
										<tr>
											<td>{ proto.Name }</td>
											<td>{ strconv.Itoa(proto.Count) }</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>

				<!-- Conversations -->
				<div class="card bg-base-100 shadow">
					<div class="card-body">
						<h2 class="card-title">Top Conversations</h2>
						<div class="overflow-x-auto">
							<table class="table">
								<thead>
									<tr>
										<th>Source</th>
										<th>Destination</th>
										<th>Protocol</th>
										<th>Packets</th>
										<th>Bytes</th>
									</tr>
								</thead>
								<tbody>
									for _, conv := range data.Conversations {
										<tr>
											<td>{ conv.SourceIP }</td>
											<td>{ conv.DestIP }</td>
											<td>{ conv.Protocol }</td>
											<td>{ strconv.Itoa(conv.PacketCount) }</td>
											<td>{ strconv.FormatInt(conv.TotalBytes, 10) }</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>

				<!-- Traffic Timeline -->
				<div class="card bg-base-100 shadow">
					<div class="card-body">
						<h2 class="card-title">Traffic Timeline</h2>
						<div 
							hx-get={ "/analysis/traffic-timeline/" + data.SessionID } 
							hx-trigger="load" 
							class="w-full h-64"
						>
							<div class="loading loading-spinner"></div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
}
