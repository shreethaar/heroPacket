package upload

import "strings"

// Success response template
templ UploadSuccess(filename string) {
  <div id="uploadResponse" class="mt-4 text-center">
    <div class="bg-gray-800 border-2 border-teal-500 text-teal-400 px-4 py-3 rounded relative" role="alert">
      <div class="flex items-center">
        <svg class="h-5 w-5 text-teal-400 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
        <span>Successfully uploaded <strong>{ filename }</strong></span>
      </div>
    </div>
    <script>
      console.log("Upload successful, refreshing page in 2 seconds...");
      // Refresh the page after a short delay to show the new file in the table
      setTimeout(() => {
        window.location.reload();
      }, 2000);
    </script>
  </div>
}

// Error response template
templ UploadError(message string) {
  <div id="uploadResponse" class="mt-4 text-center">
    <div class="bg-gray-800 border-2 border-red-500 text-red-400 px-4 py-3 rounded relative" role="alert">
      <div class="flex items-center">
        <svg class="h-5 w-5 text-red-400 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>
        if strings.Contains(message, "Duplicate file detected") {
          <span>
            <strong>Duplicate file:</strong> { strings.Replace(message, "Duplicate file detected. This file is identical to ", "", 1) }
          </span>
        } else {
          <span>{ message }</span>
        }
      </div>
    </div>
    <script>
      console.error("Upload error: " + { message });
    </script>
  </div>
} 